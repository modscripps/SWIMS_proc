function [STout]=Read_raw_ANYmisc(filename, TYstr)%function [STout]=Read_raw_ANYmisc(filename, TYstr)%Pass in a filename, and return row vectors of the PC timestamp, elapsed time,% and data vectors that are specified by the record type (TYstr)% contained in the ascii file (default = 'LT', line tension).  % Output structure STout contains the specified data.% DPW - 18-Feb-2008if nargin<2 || isempty(TYstr)    TYstr = 'LT';endSTout = [];% Specify format strings (for textscan) and corresponding fieldnames.% Also, indicate positions SWIMS-type timestamps and elapsed time.indPCTS = 1; indPCET = 2; % default timestamp, elapsed time positionsswitch TYstrcase 'LT' % Line Tension    FmtStr = '%s%s%n%n%n%*[^\n]';    FldNms = {'PCtimestamp','PCelapsetime','FreqX','FreqY','TensionLbs'};otherwise    error(['Unsupported record type: ' TYstr]);end% Open data file, read in records[fid,message]=fopen(filename,'r');CDat = textscan(fid,FmtStr);fclose(fid);Csiz = length(CDat);Fsiz = length(FldNms);Rsiz = length(CDat{1});% assign cell contents to specified fieldsfor i=1:Fsiz    if i<=Csiz        STout.(FldNms{i}) = CDat{i}';    else        STout.(FldNms{i}) = NaN*ones(1,Rsiz);    endendclear CDat%% Process SWIMS (su.exe) timestamps% initializePCTSn = []; PCETn = [];if indPCTS>0 && indPCTS<=Csiz    PCTS = STout.(FldNms{indPCTS});    PCTSn = NaN*ones(1,Rsiz);endif indPCET>0 && indPCET<=Csiz    PCET = STout.(FldNms{indPCET});    PCETn = NaN*ones(1,Rsiz);endiTSbad = [];HrPday=24; MinPday=1440; SecPday=86400;% convertif ~isempty(PCTSn) || ~isempty(PCETn)    for i=1:Rsiz        if ~isempty(PCTSn) && length(PCTS{i})==13            year=str2double(PCTS{i}(1:4));            yday0=str2double(PCTS{i}(5:7)); % yearday (Jan 1 = 0.nnnn)            hour=str2double(PCTS{i}(8:9));            min=str2double(PCTS{i}(10:11));            sec=str2double(PCTS{i}(12:13));            PCTSn(i) = yday0 + hour/HrPday + min/MinPday + sec/SecPday;        end        if ~isempty(PCETn) && length(PCET{i})==16            iord=[15 16 13 14 11 12 9 10 7 8 5 6 3 4 1 2];            PCETn(i) = hex2num(PCET{i}(iord));        end    end    % Assign results to structure fields    if isempty(PCTSn)        PCTSn = 0; % to check both timestamp types, below    else        STout.(FldNms{indPCTS}) = PCTSn;    end    if isempty(PCETn)        PCETn = 0; % to check both timestamp types, below    else        STout.(FldNms{indPCET}) = PCETn;    end    % Find records with either timestamp being bad    iTSbad = find(isnan(PCTSn+PCETn));end% remove records with bad timestamps (possibly incomplete records)if ~isempty(iTSbad)    for i=1:Fsiz        STout.(FldNms{i})(iTSbad) = [];    endend% Special post-processing:switch TYstr    case 'LT' % SWIMS winch line tension        ; % no special treatmentend % of switch for special post-procreturn