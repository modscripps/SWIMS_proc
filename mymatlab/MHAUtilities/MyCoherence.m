function [k,C,T]=MyCoherence(data,data2,nfft,dz,frsm)%Not finished!samplefreq=1/dz;dk=samplefreq/nfft; % elementary frequency bandwidthk=(dk:dk:dk*nfft/2)'; % frequency vector for spectraif size(find(isnan(data)))~=0	disp 'warning: data contains Nans'end%demean and detrenddata=detrend(data,0);data=detrend(data);%demean and detrenddata2=detrend(data2,0);data2=detrend(data2);[m,n]=size(data);[m2,n2]=size(data2);if ~(m2==m & n2==n)	disp 'error: inputs must be same size.'	return;end%Compute spectrum.  If we only have one vector, just do it.if n==1	P=csd(data,data2,nfft,samplefreq);	P=P(2:length(P))/(0.5*samplefreq); else	%otherwise average all of the spectra together.	Pa=zeros(nfft/2,n);	for c=1:n		P1=psd(data(:,c),nfft,samplefreq);		P1=P1(2:length(P1))/(0.5*samplefreq);		P1a(:,c)=P1;	end	P=mean(P1a')';	end%Now do the smoothingif frsm ~=0	Ps=SmoothSpec(k,P,frsm);else	Ps=P;	ks=k;end%If a matrix was passed in, return the whole matrix of spectra.if n > 1 	P=P1a;end