function g=filtresponse(b,a,f,npts);%function g=filtresponse(b,a,f,npts);%filtresponse takes b and a computed from a filter-design routine%such as butter.  Given a frequency vector and a number of points,%it computes a time series of that length of normal, random noise%(ie a white spectrum) and filters it with the given filter coeffs.%Then ratio of the spectra of the filtered and unfiltered data is %the answer.  If npts is unspecified, 10 times the length of f is used.if ~exist('npts')	npts=10*length(f);endnfft=length(f)*2;%Make a time series of data=randn(npts,1);samplefreq=2*max(f);data2=filtfilt(b,a,data);data=detrend(data,0);data=detrend(data);data2=detrend(data2,0);data2=detrend(data2);%plot(data)P=psd(data,nfft,samplefreq);P=P(2:length(P))'/(0.5*samplefreq); % delete f=0;, normalize to preserve varianceP2=psd(data2,nfft,samplefreq);P2=P2(2:length(P2))'/(0.5*samplefreq); % delete f=0;, normalize to preserve varianceg=P2./P;