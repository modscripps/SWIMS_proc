%function d=VarTrack2(var,depth,isopycdepth)%%VarTrack2.m%Matthew Alford%Modified from VarTrack2.m retrieved from 12/9/96 backup,%on 1/27/97 when the original mysteriously disappeared.%%Track a variable into isopycnal coordinates by inputting %the depths of each isopycnal, previously tracked with VarTrack,%the depth vector reflecting the depth of the Eulerian measurements,%and the eulerian data.  Returns the semilagrangian variable. %%INPUT var = [nbins x nrecords],depth=[nbins x 1], %isopycdepth = [Num_Isopycnals x nrecords]%%OUTPUT d = [Num_Isopycnals x nrecords]%%example: Ri_Iso=VarTrack2(Ri,z,depth);%function d=VarTrack2(var,depth,isopycdepth)[m,n]=size(var);%m is the number of bins of var, n is the number of records.%depth had better be the same number of bins, but a vector.%Also isopycdepth is a matrix not a vector-- and each column is one time.%So we replace N by M below.[M,N]=size(isopycdepth);%Modified for compatibility with NaN'sind=find(isnan(var));var(ind)=-9999;%Also do some error checking on isopycdepth: find any < 0 values.ind=find(isopycdepth<0);isopycdepth(ind)=-9999;ind=find(isnan(isopycdepth));isopycdepth(ind)=-9999;d=zeros(M,n);for b=1:n	ind=1;	for c=1:M		ind=min(find(depth > isopycdepth(c,b)))-1;		%ind should now index the depth just smaller than the isopycnal we		%seek.				%if the sought isopyc is too big return 500, if too small return 0.		%Changed 2/1/99: return NaN's if data is out of range.		if isempty(ind)	%ind == [] ; changed for version 5 3/18/97			d(c,b)=NaN;		elseif ind == 0			d(c,b)=NaN;		else			diff1=(depth(ind+1) - depth(ind));			if diff1 == 0.0 				diff1=1e-10;			end			fract=( isopycdepth(c,b)-depth(ind)) / diff1;			d(c,b)=var(ind,b)+fract*(var(ind+1,b)-var(ind,b));					end	endend		%One more change: now fill in NaN's wherever there were NaN's in isopycdepth%d(find(d<0)) = NaN;%5/28/00: This last line is a mistake.  It replaced all the negatives%with nans.  I fix it here.d(find(isopycdepth<0)) = NaN;