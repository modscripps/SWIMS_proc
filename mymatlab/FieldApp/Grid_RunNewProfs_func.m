function Dout = Grid_RunNewProfs_func(cruz, Cst)% Grid_RunNewProfs.m -  Check for updated raw CTD (matlab) data; Find yearday limits%  for new Down/Up profiles based on Winch Line Data; Add profiles to Gridded Data.%  Improvement of previous methods - Dave W, Oct 2003, revised for SIO 2015%% --> what are Dout, cruz, and Cst?%Dout = [];if nargin<2 || ~isstruct(Cst)    Cst = [];end% Later, some options could be passed via Cst input structure%%%% Put options, specifications here for now %%%%%%%%%%%%%%%%%%%%%%%%%%%ProfByLine  = 1;        % How to find profile limits: 1=use winchline data; 0=use CTD pr, or otherIgnoreOrder = 0;        % Only New profiles are added:% =0 New profiles must follow existing ones (except: replace very last one if incomplete);% =1 To insert missing profiles: Just WARN about yearday-order issues, don't STOP or RESET.IgnoreGPS = 0; % =0 require GPS data to span CTD interval;% =1 to grid CTD anyway, with NaNs in for lat,lon where GPS is unavailable.% Edit these values to establish new grid increment or range:% Make multiple entries to allow different grid defn's for various yearday rangesZGydays = []; % yearday rangesZGmin 	= []; ZGint   = []; ZGmax   = []; % depth-grid start, spacing, endZGrid 	= []; % depth-grid vectorZGovts 	= []; % Compute overturn stats flags (0=no, 1=yes)ZGyr 	= [];%{% % PS01ZGydays(end+1,1:2) 	= [88, 102]; ZGmin(end+1)		= 0; ZGint(end+1)		= 0.5; ZGmax(end+1)		= 281;ZGrid{end+1} 		= [ZGmin(end):ZGint(end):ZGmax(end)];ZGovts(end+1) 		= 1; ZGyr(end+1) 		= 2001;% ProfByLine = 0; % use previously determined limits (based on pres.)% % Lk Tests, no pumpZGydays(end+1,1:2) 	= [268.6, 269.1]; ZGmin(end+1)		= NaN; ZGint(end+1)		= NaN; ZGmax(end+1) 		= NaN;ZGrid{end+1} 		= []; % Do Not Grid These DataZGovts(end+1) 		= 0; ZGyr(end+1) 		= 2003;%% Puget Sound TestsZGydays(end+1,1:2)  = [274.7, 275.2]; ZGmin(end+1)        = 0; ZGint(end+1)        = 0.5; ZGmax(end+1)        = 200;ZGrid{end+1}        = [ZGmin(end):ZGint(end):ZGmax(end)];ZGovts(end+1)       = 1; ZGyr(end+1)         = 2003;%% Lk Wash Tests, quick survey, with pumpZGydays(end+1,1:2)  = [281, 288]; ZGmin(end+1)        = 0; ZGint(end+1)        = 0.25; ZGmax(end+1)        = 70;ZGrid{end+1}        = [ZGmin(end):ZGint(end):ZGmax(end)];ZGovts(end+1)       = 1; ZGyr(end+1)         = 2003;%% Hood Canal, 2003ZGydays(end+1,1:2)  = [297.9, 301.99]; ZGmin(end+1)        = 0; ZGint(end+1)        = 0.5; ZGmax(end+1)        = 200;ZGrid{end+1}        = [ZGmin(end):ZGint(end):ZGmax(end)];ZGovts(end+1)       = 1; ZGyr(end+1)         = 2003;%% Adm Inlet, 2003ZGydays(end+1,1:2)  = [302, 303];ZGmin(end+1)        = 0; ZGint(end+1)        = 0.5; ZGmax(end+1)        = 250;ZGrid{end+1}        = [ZGmin(end):ZGint(end):ZGmax(end)];ZGovts(end+1)       = 1; ZGyr(end+1)         = 2003;%% Lk Wash M.L. RestratZGydays(end+1,1:2)  = [310, 320]; ZGmin(end+1)        = 0; ZGint(end+1)        = 0.25; ZGmax(end+1)        = 70;ZGrid{end+1}        = [ZGmin(end):ZGint(end):ZGmax(end)];ZGovts(end+1)       = 1; ZGyr(end+1)         = 2003;%% Puget Sound, 2003 (intrusions)ZGydays(end+1,1:2)  = [322, 326]; ZGmin(end+1)        = 0; ZGint(end+1)        = 0.5; ZGmax(end+1)        = 250;ZGrid{end+1}        = [ZGmin(end):ZGint(end):ZGmax(end)];ZGovts(end+1)       = 1; ZGyr(end+1)         = 2003;%% ML04, 2004 (N Pacific)ZGydays(end+1,1:2)  = [59, 90]; ZGmin(end+1)        = 0; ZGint(end+1)        = 0.5; ZGmax(end+1)        = 200;ZGrid{end+1}        = [ZGmin(end):ZGint(end):ZGmax(end)];ZGovts(end+1)       = 1; ZGyr(end+1)         = 2004;%% aeg04ZGydays(end+1,1:2)  = [300, 330]; ZGmin(end+1)        = 0; ZGint(end+1)        = 0.5; ZGmax(end+1)        = 600;ZGrid{end+1}        = [ZGmin(end):ZGint(end):ZGmax(end)];ZGovts(end+1)       = 1; ZGyr(end+1)         = 2004;%% stf07, april testsZGydays(end+1,1:2)  = [90, 94]; ZGmin(end+1)        = 0; ZGint(end+1)        = 0.5; ZGmax(end+1)        = 250;ZGrid{end+1}        = [ZGmin(end):ZGint(end):ZGmax(end)];ZGovts(end+1)       = 1; ZGyr(end+1)         = 2007; %IgnoreGPS          = 1;%% stf07, intrusionsZGydays(end+1,1:2)  = [170, 220]; ZGmin(end+1)        = 0; ZGint(end+1)        = 0.5; ZGmax(end+1)        = 250;ZGrid{end+1}        = [ZGmin(end):ZGint(end):ZGmax(end)];ZGovts(end+1)       = 1; ZGyr(end+1)         = 2007;%% philexZGydays(end+1,1:2)  = [31, 49]; ZGmin(end+1)        = 0; ZGint(end+1)        = 0.5; ZGmax(end+1)        = 400;ZGrid{end+1}        = [ZGmin(end):ZGint(end):ZGmax(end)];ZGovts(end+1)       = 1; ZGyr(end+1)         = 2008;ZGydays(end+1,1:2)  = [49, 61]; %% philex, deeper runsZGmin(end+1)        = 0; ZGint(end+1)        = 0.5;ZGmax(end+1)        = 600;ZGrid{end+1}        = [ZGmin(end):ZGint(end):ZGmax(end)];ZGovts(end+1)       = 1; ZGyr(end+1)         = 2008;%% mc09ZGydays(end+1,1:2)  = [80, 125]; ZGmin(end+1)        = 0; ZGint(end+1)        = 0.5; ZGmax(end+1)        = 650;ZGrid{end+1}        = [ZGmin(end):ZGint(end):ZGmax(end)];ZGovts(end+1)       = 1; ZGyr(end+1)         = 2009;%% MORTZGydays(end+1,1:2)  = [305, 322]; ZGmin(end+1)        = 0; ZGint(end+1)        = 0.5; ZGmax(end+1)        = 150;ZGrid{end+1}        = [ZGmin(end):ZGint(end):ZGmax(end)];ZGovts(end+1)       = 1; ZGyr(end+1)         = 2011;%% wa_nliw_test (lk wash)ZGydays(end+1,1:2)  = [1, 3]; ZGmin(end+1)        = 0; ZGint(end+1)        = 0.5; ZGmax(end+1)        = 60;ZGrid{end+1}        = [ZGmin(end):ZGint(end):ZGmax(end)];ZGovts(end+1)       = 1; ZGyr(end+1)         = 2013;ZGydays(end+1,1:2)  = [112, 116]; %% wa_nliw_apr2013ZGmin(end+1)        = 0; ZGint(end+1)        = 0.5; ZGmax(end+1)        = 550; % JDF canyon could be deepZGrid{end+1}        = [ZGmin(end):ZGint(end):ZGmax(end)];ZGovts(end+1)       = 1; ZGyr(end+1)         = 2013;%% WaWaves14ZGydays(end+1,1:2)  = [240, 241.99]; ZGmin(end+1)        = 0; ZGint(end+1)        = 0.5; ZGmax(end+1)        = 200; % on shelf (skip early test)ZGrid{end+1}        = [ZGmin(end):ZGint(end):ZGmax(end)];ZGovts(end+1)       = 1; ZGyr(end+1)         = 2014;%% WaWaves14ZGydays(end+1,1:2)  = [242.0, 244.0]; ZGmin(end+1)        = 0; ZGint(end+1)        = 0.5; ZGmax(end+1)        = 500; % up slopeZGrid{end+1}        = [ZGmin(end):ZGint(end):ZGmax(end)];ZGovts(end+1)       = 1; ZGyr(end+1)         = 2014;%}%% ArcticMix% ZGydays(end+1,1:2)  = [237.0, 270.0]; % ZGmin(end+1)        = 0; % ZGint(end+1)        = 0.5; % ZGmax(end+1)        = 500; % DEEP ENOUGH?% ZGrid{end+1}        = [ZGmin(end):ZGint(end):ZGmax(end)];% ZGovts(end+1)       = 1; % ZGyr(end+1)         = 2015;% SproulTestZGydays(end+1,1:2)  = [76.0, 80.0]; ZGmin(end+1)        = 0; ZGint(end+1)        = 0.5; ZGmax(end+1)        = 500; % DEEP ENOUGH?ZGrid{end+1}        = [ZGmin(end):ZGint(end):ZGmax(end)];ZGovts(end+1)       = 1; ZGyr(end+1)         = 2016;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Cruise Defn, folders %%%savepath    = []; % avoid conflict with matlab functioncrz         = cruz;set_swims_pathscruise      = cruz;CrName      = cruz;switch lower(cruz)    case 'ps01'        year = 2001;    case {'ps02','home02'}        year = 2002;    case {'bs03','hc03','ps03'}        year = 2003;    case {'ml04','aeg04'}        year = 2004; % but, Lk Wash ML04 in Dec 2003    case 'stf07'        year = 2007;    case 'philex08'        year = 2008;    case 'mc09'        year = 2009;    case 'mort'        year = 2011;    case {'wa_nliw_test','wa_nliw_apr2013'};        year = 2013;    case 'wawaves14'        year = 2014;    case 'arcticmix'        year = 2015;    case 'sproultest'        year = 2016;    otherwise        disp(['No year defined for gridding SWIMS cruise=' cruz])        year = 0;        returnend        IndFld      = swimsindex;MatFld      = fullfile(swimsmatdata,'CTD'); % local mat directoryMatIndx     = fullfile(IndFld, ['CTD_' CrName '_matfiles.mat']);GridIndx    = fullfile(IndFld, ['SWIMS_' CrName '_gridfiles.mat']);GridFld     = swimsgridded; % local mat directoryGpsIndx     = fullfile(IndFld, ['GPS_' CrName '_matfiles.mat']);GpsFld      = fullfile(swimsmatdata,'GPS');LinIndx     = fullfile(IndFld, ['LD_' CrName '_matfiles.mat']);LinFld      = fullfile(swimsmatdata,'LD');%IndFld     = fullfile(savepath, 'indexes'); % raw,matlab data index folder%MatFld     = fullfile(savepath,'data_mat','CTD'); % local mat directory%GridFld    = fullfile(savepath,'griddata'); % local mat directory%GpsFld     = fullfile(savepath,'data_mat', 'GPS');%LinFld     = fullfile(savepath,'data_mat', 'LD');%%% Gather indices into Grid,CTD,Line matlab filesclear GrdF CtdF LdF Cruise Set_params Index PROGif ~exist(GridIndx,'file') || ~exist(MatIndx,'file')    disp('  Cannot find index into raw CTD or gridded files, skipping!')    returnelse    GrdF=load(GridIndx);    CtdF=load(MatIndx);endLdF=[];if ProfByLine && ~exist(LinIndx,'file')    disp('  Cannot find index into LineData files (to find profiles), skipping!')    returnelse    LdF=load(LinIndx);end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Find YearDay Limits for un-gridded CTD profiles %%%%%%%%% (Also, Modify last existing profile if it was incomplete) %%Grid_FindNewProfsDout.Gridded = 0;if isempty(Prof_Ydays)    disp('No un-gridded CTD profiles were found')    returnend%% Grid profiles, in interval ranges corresponding to CTD matlab filesfor iPd=1:length(Prof_Ydays)    YLIMS = Prof_Ydays{iPd}; % [yd_starts; yd_ends; UpDown]    if isempty(YLIMS)        continue % Data interval had no Down/Up profiles    end    yd_b = YLIMS(1,1); yd_e = YLIMS(2,end);    % Find Grid for this yearday range (yd_b:yd_e cannot stradle grid limits)    iG = find( yd_b>=ZGydays(:,1) & yd_b<=ZGydays(:,2) & year==ZGyr');    if isempty(iG) || isempty(ZGrid{iG})        disp(['No gridding for yeardays=' num2str(yd_b) ':' num2str(yd_e)])        continue    end    %keyboard    zgrid = ZGrid{iG};     GridOvts = ZGovts(iG);    if ~isempty(zgrid)        GridStartTime = yd_b;        yd_b = yd_b - (10/86400); % Just before first profile        yd_e = yd_e + (5/86400); % Just after last profile        GPS  = get_gps_data(yd_b, yd_e, GpsIndx, GpsFld, 1);        CSci = get_SWIMS_SciData(yd_b, yd_e, MatIndx, MatFld, 1);                if isempty(GPS)            clear GPS            GPS.sattime = NaN;        end        xx = max(GPS.sattime);        if xx < YLIMS(2,end) || isnan(xx)            yy = ['  CTD data beyond GPS time = ' num2str(xx)];            disp([yy ' will not be gridded yet!'])            % IgnoreGPS = 1; % un-comment this to proceed anyway            if IgnoreGPS                disp('   ** IgnoreGPS=1, proceed anyway with some lat,lon=NaN .')            end        end                    %warning off %  MATLAB:divideByZero        %warning off MATLAB:break_outside_of_loop                Grid_MakeNewProfs        if ~isempty(LastPrYDend) && ~isnan(LastPrYDend)            Dout.Gridded = LastPrYDend;        end    end    if iPd<length(Prof_Ydays)        disp(' Next profiles ...')    end    %keyboardend    