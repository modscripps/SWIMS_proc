function filelist = SaveNewFiles(remotepath,localpath,fileprefix,file_index)% filelist = SaveNewFiles(remotepath,localpath,fileprefix,file_index);% Determine data files in folder=remotepath (with name starting with fileprefix)%   that have not been detected in index_file=file_index (full path), and%   copy them into folder=localpath (and update index_file=file_index).%   To sort data by time, it is assumed files end with ddd-hhmm-ss, where%   ddd=yearday, hh=hour, mm=minute, ss=second is timestamp of file start.%   If no index is specified (isempty(file_index)), just checks existence%       in localpath before copying.  Otherwise, index contains:%       file_name (cell), file_yday (stamp), file_status, file_copied (datenum).%   filelist = new files copied (cell)% modified apr-02 by dpw from GetNewFiles.m, mha mar-01if nargin < 4    file_index = [];endfilelist=[];if ~isempty(file_index)    if ~exist(file_index,'file')        disp(['Exiting SaveNewFiles, no index=' file_index])        filelist=NaN;        return    else        load(file_index)    endendremfils = dir(fullfile(remotepath,[fileprefix '*']));locfils = dir(fullfile(localpath,[fileprefix '*']));loc_fils = [];for ilf = 1:length(locfils)    loc_fils{ilf} = locfils(ilf).name; % put in cell arrayend%% Determine which files to copy (or otherwise record)filcop = NaN*ones(length(remfils),1);for irf = 1:length(remfils)    fnm = remfils(irf).name;    % check local directory    idx = find( strcmpi(fnm, loc_fils) );    if isempty(idx) % not yet copied        filcop(irf) = 1;    end    % check index next    if ~isempty(file_index)        idx = find( strcmpi(fnm, file_name) );        if isempty(idx)            if isnan(filcop(irf)) % copied, but not in index                filcop(irf) = 0; % re-copy it, put in index            end        else            if ~isnan( file_status(idx(1)) )                filcop(irf) = NaN; % in index => already copied once, no action            elseif isnan(filcop(irf)) % copied, but only looked at by index                filcop(irf) = -2; % save as copy.NEW, leave index alone            else % not copied, but previously detected                filcop(irf) = -1; % copy, but mention previous attempt            end        end    end % of index check    %keyboardend % of remote file checkiok = find(~isnan(filcop)); icp = find(filcop > -0.1);if isempty(iok)    disp(['No new ' fileprefix 'files, exiting.'])    returnendif ~isempty(icp) & ~isempty(file_index) % record  newly detected files in index    for irf=1:length(icp)        file_name{end+1} = remfils(icp(irf)).name;        file_yday(end+1) = NaN;        file_status(end+1) = NaN;        file_copied(end+1) = now;    end    save(file_index, 'file_name', 'file_yday', 'file_status', 'file_copied');end% Copy new files, update index upon completionfor irf = 1:length(iok)    fnm = remfils(iok(irf)).name;    cpfil = fnm; idx = NaN;    if filcop(iok(irf)) < -1.9 % save copy of new one, no update        cpfil = [fnm '.NEW'];    else % copy new file into local folder, update index        if ~isempty(file_index)            idx = find( strcmpi(fnm, file_name) );            idx = idx(1); % to update index        end        % rename existing file w/.PREV [Unless REMOTE==LOCAL folder,        %  EG when indexing archive data off a CD]        if filcop(iok(irf)) == 0 & ~strcmp(remotepath, localpath)            disp(['Rename: ' fnm '.PREV'])            [sta,msg] = copyfile(fullfile(localpath,fnm), ...                fullfile(localpath,[fnm '.PREV']) );            if ~sta, disp(msg); end            if ~strcmp(fullfile(remotepath, fnm), fullfile(localpath, cpfil))                delete(fullfile(localpath, cpfil)); % clear for new copy            end        end % of re-naming existing, non-indexed    end    % Ready to save file in local folder    typstr=['SaveAs';'ReSave';'SAVING';'Saving'];    %keyboard    str = typstr(filcop(iok(irf))+3,:);    disp( [str ': ' cpfil ', ' num2str(irf) ' of ' num2str(length(iok))] )    % Copy if remote~=local, just update index otherwise    if ~strcmp(fullfile(remotepath, fnm), fullfile(localpath, cpfil))        [sta,msg] = copyfile( fullfile(remotepath, fnm), ...            fullfile(localpath, cpfil) );        if ~sta            disp(msg); idx = NaN; % didn't copy, don't update index        end        pause(0.4); % give other machine a rest    end    % Update file index to indicate that copying is complete    if ~isnan(idx) % update index        file_name{idx} = cpfil; % ends with ydy-hhmm-ss        yday = str2num(cpfil(end-10:end-8));        hh = str2num(cpfil(end-6:end-5));        mm = str2num(cpfil(end-4:end-3));        ss = str2num(cpfil(end-1:end));        %convert the above vars into decimal yearday        file_yday(idx) = yday + ((ss/60 + mm)/60 + hh)/24;        file_status(idx) = 0;        file_copied(idx) = now;    end    filelist{end+1} = cpfil;endif isempty(file_index)    disp(['Finished copying files.'])else    disp(['Finished copying files, updating ' file_index])    save(file_index, 'file_name', 'file_yday', 'file_status', 'file_copied');end